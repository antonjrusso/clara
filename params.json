{"name":"Clara","tagline":"Cluster Administration tools","body":"Clara, a set of Cluster Administration Tools\r\n============================================\r\n\r\n[clara](https://github.com/edf-hpc/clara/blob/master/docs/source/clara.md) is a set of cluster administration tools.  The different tools are written as plugins that can be added or removed independently.\r\n\r\nClara provides the following plugins:\r\n* [repo](https://github.com/edf-hpc/clara/blob/master/docs/source/clara-repo.md)     creates, updates and synchronizes local Debian repositories\r\n* [ipmi](https://github.com/edf-hpc/clara/blob/master/docs/source/clara-ipmi.md)    manages and get the status from the nodes of a cluster\r\n* [slurm](https://github.com/edf-hpc/clara/blob/master/docs/source/clara-slurm.md)    performs tasks using SLURM's controller\r\n* [images](https://github.com/edf-hpc/clara/blob/master/docs/source/clara-images.md)   creates and updates the images of installation of a cluster\r\n* [p2p](https://github.com/edf-hpc/clara/blob/master/docs/source/clara-p2p.md)      makes torrent images and seeds them via BitTorrent\r\n* [enc](https://github.com/edf-hpc/clara/blob/master/docs/source/clara-enc.md)     interact with encrypted files using configurable methods\r\n* [build](https://github.com/edf-hpc/clara/blob/master/docs/source/clara-build.md)     builds Debian packages\r\n\r\nThere is also a [user's guide](https://github.com/edf-hpc/clara/blob/master/docs/users_guide.md).\r\n***\r\n# clara-repo(1)\r\n\r\n## NAME\r\n\r\nclara-repo - creates, updates and synchronizes local Debian repositories\r\n\r\n## SYNOPSIS\r\n\r\n    clara repo key\r\n    clara repo init <dist>\r\n    clara repo sync (all|<dist> [<suites>...])\r\n    clara repo add <dist> <file>... [--reprepro-flags=\"list of flags\"...]\r\n    clara repo del <dist> <name>...\r\n    clara repo list <dist>\r\n    clara repo -h | --help | help\r\n\r\nOptions:\r\n\r\n    <file> can be one or more *.deb binaries, *.changes files or *.dsc files.\r\n\r\n    <name> is the package to remove, if the package is a source name, it'll\r\n    remove all the associated binaries\r\n\r\n## DESCRIPTION\r\n\r\n*clara repo* offers simple commands to create a local Debian repository with reprepro and\r\nupdate, add and remove files from them. It also provides the possibility of making mirror\r\nof remote Debian repositories locally.\r\n\r\n## OPTIONS\r\n\r\n    clara repo key\r\n\r\n        Install the secret GPG key to use in the repository.\r\n\r\n    clara repo init <dist>\r\n\r\n        Create the initial configuration for reprepro for our local repository and makes\r\n        the first export.\r\n\r\n    clara repo sync (all|<dist> [<suites>...])\r\n\r\n        Mirror locally a Debian suite. We can choose a single suite such as wheezy,\r\n        wheezy-backports, calibre8, etc; we can choose all the suites with the parameter\r\n        'all' or just all the suites used by a distribution.\r\n\r\n    clara repo add <dist> <file>... [--reprepro-flags=\"list of flags\"...]\r\n\r\n        Add packages to the local repository.\r\n        <file> can be one or more *.deb binaries, *.changes files or *.dsc files.\r\n        For the --reprepro-flags, check the documentation of reprepro.\r\n\r\n    clara repo del <dist> <name>...\r\n\r\n        Remove package to the local repository.\r\n        <name> is the package to remove, if the package is a source name, it'll also\r\n        remove all the associated binaries.\r\n\r\n    clara repo list <dist>\r\n\r\n        Lists all contents of the repository.\r\n\r\nThis distribution in <dist> must be listed in the field \"allowed_distributions\" from the section [common].\r\n\r\n## EXAMPLES\r\n\r\nTo mirror locally all the suites from calibre8:\r\n\r\n    clara repo sync calibre8\r\n\r\nTo mirror locally Debian backports for Wheezy:\r\n\r\n    clara repo sync calibre8 wheezy-backports\r\n\r\nTo create a local repository and add packages to it:\r\n\r\n    clara repo key\r\n    clara repo init calibre8\r\n    clara repo add calibre8 mypackage_1-2.dsc\r\n\r\n## SEE ALSO\r\n\r\nclara(1), clara-images(1), clara-ipmi(1), clara-p2p(1), clara-slurm(1), clara-enc(1), clara-build(1)\r\n***\r\n# clara-ipmi(1)\r\n\r\n## NAME\r\n\r\nclara-ipmi - manages and get the status from the nodes of a cluster\r\n\r\n## SYNOPSIS\r\n\r\n    clara ipmi connect [-jf] <host>\r\n    clara ipmi deconnect <hostlist>\r\n    clara ipmi (on|off|reboot) <hostlist>\r\n    clara ipmi status <hostlist>\r\n    clara ipmi setpwd <hostlist>\r\n    clara ipmi getmac <hostlist>\r\n    clara ipmi pxe <hostlist>\r\n    clara ipmi disk <hostlist>\r\n    clara ipmi ping <hostlist>\r\n    clara ipmi blink <hostlist>\r\n    clara ipmi immdhcp <hostlist>\r\n    clara ipmi bios <hostlist>\r\n    clara ipmi reset <hostlist>\r\n    clara ipmi -h | --help\r\n\r\n    clara ipmi <host> connect [-jf]\r\n    clara ipmi <hostlist> deconnect\r\n    clara ipmi <hostlist> (on|off|reboot)\r\n    clara ipmi <hostlist> status\r\n    clara ipmi <hostlist> setpwd\r\n    clara ipmi <hostlist> getmac\r\n    clara ipmi <hostlist> pxe\r\n    clara ipmi <hostlist> disk\r\n    clara ipmi <hostlist> ping\r\n    clara ipmi <hostlist> blink\r\n    clara ipmi <hostlist> immdhcp\r\n    clara ipmi <hostlist> bios\r\n    clara ipmi <hostlist> reset\r\n\r\n## DESCRIPTION\r\n\r\n*clara ipmi* offers a simplified interface of ipmitool, an utility for controlling\r\nIPMI-enabled devices. The username and password needed by ipmitool are handled\r\nautomatically.\r\n\r\n## OPTIONS\r\n\r\n    clara ipmi connect [-jf] <host>\r\n\r\n        Connect to IMM serial console, including video, keyboard and mouse controlling\r\n        The flag -j joins the connection and the flag -f forces it.\r\n\r\n    clara ipmi deconnect <host>\r\n\r\n        Deconnect from a IMM serial console\r\n\r\n    clara ipmi on <hostlist>\r\n\r\n        Power up chassis\r\n\r\n    clara ipmi off <hostlist>\r\n\r\n        Power down chassis into soft off. WARNING: it does do a clean shutdown of the OS.\r\n\r\n    clara ipmi reboot <hostlist>\r\n\r\n        This command will perform a hard reset\r\n\r\n    clara ipmi status <hostlist>\r\n\r\n        Get target node power status using the IMM device\r\n\r\n    clara ipmi setpwd <hostlist>\r\n\r\n        Set up IMM user id/password on a new device\r\n\r\n    clara ipmi getmac <hostlist>\r\n\r\n        Get node MAC addresses using the IMM device\r\n\r\n    clara ipmi pxe <hostlist>\r\n\r\n        Use IMM to perform a network boot on the next reboot\r\n\r\n    clara ipmi disk <hostlist>\r\n\r\n        Use IMM to perform a disk boot on the next reboot\r\n\r\n    clara ipmi ping <hostlist>\r\n\r\n        Use fping to check status of the machines\r\n\r\n    clara ipmi blink <hostlist>\r\n\r\n        Make chassis blink to help on-site admins to identify the machine\r\n\r\n    clara ipmi immdhcp <hostlist>\r\n\r\n        Set selected ipmi interfaces to grab an IP via DHCP\r\n\r\n    clara ipmi bios <hostlist>\r\n\r\n        Make selected machines go directly into BIOS on next reboot\r\n\r\n    clara ipmi reset <hostlist>\r\n\r\n        Reset the IMM device (cold reset)\r\n\r\n## EXAMPLES\r\n\r\nThis command will ping all hosts nodes from node12 to n99:\r\n\r\n    clara ipmi ping node[12-99]\r\n\r\nTo check the status from node13:\r\n\r\n    clara ipmi status node13\r\n\r\nOr also:\r\n\r\n    clara ipmi node13 status\r\n\r\nTODO\r\n\r\n## SEE ALSO\r\n\r\nclara(1), clara-images(1), clara-p2p(1), clara-repo(1), clara-slurm(1), clara-enc(1), clara-build(1)\r\n***\r\n# clara-slurm(1)\r\n\r\n## NAME\r\n\r\nclara-slurm - performs tasks using SLURM's controller\r\n\r\n## SYNOPSIS\r\n\r\n    clara slurm health <nodeset>\r\n    clara slurm resume <nodeset>\r\n    clara slurm drain [<nodeset>] [<reason>...]\r\n    clara slurm down [<nodeset>]\r\n    clara slurm <cmd> <subject> [<op>] [<spec>...]\r\n    clara slurm -h | --help\r\n\r\nOptions:\r\n    <op> is one of the following ones: show, create, update and delete.\r\n\r\n    <cmd> is one of the following ones: job, node, steps, frontend,\r\n    partition, reservation, block and submp.\r\n\r\n\r\n## DESCRIPTION\r\n\r\n*clara slurm* provides a simplified interface to the most useful commands from SLURM.\r\n\r\n## OPTIONS\r\n\r\n    clara slurm health <nodeset>\r\n\r\n        Show nodes' health\r\n\r\n    clara slurm resume <nodeset>\r\n\r\n        Resume the nodes.\r\n\r\n    clara slurm drain [<nodeset>] [<reason>...]\r\n\r\n        Shows drained nodes and reason why they have been drained, when used without arguments.\r\n        When it is given a nodeset, it drains the specified nodes.\r\n\r\n    clara slurm down [<nodeset>]\r\n\r\n        Shows nodes down when used without arguments.\r\n        When it is given a nodeset, it puts down the specified nodes.\r\n\r\n    clara slurm <cmd> <subject> [<op>] [<spec>...]\r\n\r\n        Simplified interface for scontrol.\r\n        Not all the <op> options are compatible with any <cmd> option but clara \r\n        will warn you of not allowed combinations.\r\n\r\n## EXAMPLES\r\n\r\nPut the nodes node[3-6] down\r\n\r\n    clara slurm down node[3-6]\r\n\r\n## SEE ALSO\r\n\r\nclara(1), clara-images(1), clara-ipmi(1), clara-p2p(1), clara-repo(1), clara-enc(1), clara-build(1)\r\n***\r\n# clara-images(1)\r\n\r\n## NAME\r\n\r\nclara-images - creates and updates the images of installation of a cluster\r\n\r\n## SYNOPSIS\r\n\r\n    clara images create <dist> [<image>] [--keep-chroot-dir]\r\n    clara images unpack ( <dist> | --image=<path> )\r\n    clara images repack <directory> ( <dist> | --image=<path> )\r\n    clara images edit <dist> [<image>]\r\n    clara images initrd <dist> [--output=<dirpath>]\r\n    clara images -h | --help | help\r\n\r\nOptions:\r\n\r\n    --image=<path>  Path to squashfs image.\r\n\r\n## DESCRIPTION\r\n\r\n*clara images* makes easy to create and update the images to boot the nodes of a cluster.\r\n\r\n## OPTIONS\r\n\r\n    clara images create <dist> [<image>] [--keep-chroot-dir]\r\n\r\n        Create a new squashfs image to use as operating system on the cluster nodes.\r\n        By default it unpacks the default image but the user can provide the path to a\r\n        different file.\r\n        The option --keep-chroot-dir allows to create the chroot used to generate\r\n        the image. By default, this chroot directory is deleted.\r\n\r\n    clara images unpack ( <dist> | --image=<path> )\r\n\r\n        Unpack the squashfs file. By default it unpacks the default image but the user can\r\n        provide the path to a different file.\r\n\r\n    clara images repack <directory> ( <dist> | --image=<path> )\r\n\r\n        Repack the squashfs file providing the image.  By default it repacks and replace\r\n        the default image but the user can choose to provide a path to save it with a different\r\n        name.\r\n\r\n    clara images edit <dist> [<image>]\r\n\r\n        Unpacks the image for editing, spawns a bash to make the changes and repacks\r\n        the image again after. By default it edits the default image but the user can\r\n        provide the path to a different image.\r\n\r\n    clara images initrd <dist> [--output=<dirpath>]\r\n\r\n        Create a new initrd image to boot the cluster nodes.\r\n        The user can use the --output option to select a directory different to the default\r\n        one to save the generated initrd.\r\n\r\nThis distribution in <dist> must be listed in the field \"allowed_distributions\" from the section [common].\r\n\r\n## EXAMPLES\r\n\r\nTo create a image for calibre8 and store it in /tmp/c8.squashfs\r\n\r\n    clara images create calibre8 /tmp/c8.squashfs\r\n\r\nTo edit the image\r\n\r\n    clara images edit calibre8\r\n\r\nTo create a initrd for the default distribution image:\r\n\r\n     clara images initrd calibre8\r\n\r\n## SEE ALSO\r\n\r\nclara(1), clara-ipmi(1), clara-p2p(1), clara-repo(1), clara-slurm(1), clara-enc(1), clara-build(1)\r\n***\r\n# clara-p2p(1)\r\n\r\n## NAME\r\n\r\nclara-p2p - makes torrent images and seeds them via BitTorrent\r\n\r\n## SYNOPSIS\r\n\r\n    clara p2p status\r\n    clara p2p restart\r\n    clara p2p mktorrent <dist> [--image=<path>]\r\n    clara p2p -h | --help | help\r\n\r\n## DESCRIPTION\r\n\r\n*clara p2p* eases creating torrent files for the cluster installation images\r\nand controlling the seeders and trackers of the cluster to see the new torrent file.\r\n\r\n## OPTIONS\r\n\r\n    clara p2p status\r\n\r\n        Check the status of the BitTorrent trackers and seeders\r\n\r\n    clara p2p restart\r\n\r\n        Restart the BitTorrent trackers and seeders\r\n\r\n    clara p2p mktorrent <dist> [--image=<path>]\r\n\r\n        Create a new torrent file for the squashfs image and restart trackers \r\n        and initial seeders. The distribution in <dist> must be listed in the\r\n        field \"allowed_distributions\" from the section [common]\r\n\r\n## EXAMPLES\r\n\r\nTo create a torrent file for the images placed at /tmp/calibre9.squashfs\r\n\r\n    clara p2p mktorrent calibre9 --image=/tmp/calibre9.squashfs\r\n\r\n## SEE ALSO\r\n\r\nclara(1), clara-images(1), clara-ipmi(1), clara-repo(1), clara-slurm(1), clara-enc(1), clara-build(1)\r\n***\r\n# clara-enc(1)\r\n\r\n## NAME\r\n\r\nclara-enc - interact with encrypted files using configurable methods\r\n\r\n## SYNOPSIS\r\n\r\n    clara enc show <file>\r\n    clara enc edit <file>\r\n    clara enc encode <file>\r\n    clara enc decode <file>\r\n    clara enc -h | --help | help\r\n\r\n## DESCRIPTION\r\n\r\n*clara enc* shows, edits and creates encrypted files using configurable methods\r\nto get the encryption key and encrypt/decrypt files.\r\n\r\n## OPTIONS\r\n\r\n    clara enc show <file>\r\n\r\n        Shows a encoded filed in plain in the terminal. It'll use $PAGER to show it.\r\n\r\n    clara enc edit <file>\r\n\r\n        Allows to create or edit a file that will be automatically encoded after closing\r\n        the editor and the copy in plain text will be erased. It'll use $EDITOR to edit it.\r\n\r\n    clara enc encode <file>\r\n\r\n        It will encode a file. The resulting file will have the same name than\r\n        the original appendix the suffix \".enc\"\r\n\r\n    clara enc decode <file>\r\n\r\n        It will decode a encrypted file. The encrypted file must have the suffix \".enc\"\r\n        in its name. The resulting file will have the same name than the original without\r\n        the suffix \".enc\"\r\n\r\n## EXAMPLES\r\n\r\nTo create an encrypted file in /data/mydata.enc:\r\n\r\n    clara enc edit /data/mydata.enc\r\n\r\nTo see quickly the contents of an encrypted file:\r\n\r\n    clara enc show this_is_my_file.enc\r\n\r\nTo create a plain text copy of an encrypted file:\r\n\r\n     clara en decode this_is_my_file.enc\r\n\r\nThis will create an unencrypted file \"this_is_my_file\"\r\n\r\n## SEE ALSO\r\n\r\nclara(1), clara-images(1), clara-ipmi(1), clara-repo(1), clara-slurm(1), clara-p2p(1), clara-build(1)\r\n***\r\n# clara-build (1)\r\n\r\n## NAME\r\n\r\nclara-build - builds Debian packages\r\n\r\n## SYNOPSIS\r\n\r\n    clara build source <dist> <dsc_file>\r\n    clara build repo <dist> <origin_dist> <package_name>\r\n    clara build -h | --help | help\r\n\r\n\r\n## DESCRIPTION\r\n\r\n*clara build* allows to build packages for any of the custom distributions\r\nand also rebuild a package that's already in the local repository of another\r\ncustom distribution.\r\nThis plugin requires *cowbuilder* installed and configured.\r\n\r\n## OPTIONS\r\n\r\n    clara build source <dist> <dsc_file> \r\n\r\n        Build a source package targetting the distro indicated.\r\n\r\n    clara build repo <dist> <origin_dist> <package_name>\r\n\r\n        Rebuilds a package from the local repository of the \"origin_dist\"\r\n        for the distro indicated. The repository must contain the source package\r\n        of the package we want to rebuild.\r\n\r\n\r\n## EXAMPLES\r\n\r\nTo build the source package of calibre-hpc for calibre8 that is at /tmp/calibre-hpc_1.2.dsc\r\n\r\n    clara build calibre8 /tmp/calibre-hpc_1.2.dsc\r\n\r\nTo rebuild the same package for calibre9 using the package in the local repository\r\nof calibre8:\r\n\r\n    clara build calibre8 calibre9 calibre-hpc\r\n\r\n\r\n## SEE ALSO\r\n\r\nclara(1), clara-images(1), clara-ipmi(1), clara-repo(1), clara-slurm(1), clara-enc(1), clara-p2p(1)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}